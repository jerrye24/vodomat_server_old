stages:
  - test
  - build
  - deploy

test:
  stage: test
  script: echo "Test"

build:
  image: docker:latest
  stage: build
  script:
    - docker login -u ${REGISTRY_USERNAME} -p ${REGISTRY_PASSWORD} registry.gitlab.com
    - docker build -t registry.gitlab.com/${REGISTRY_USERNAME}/vodomat_server_old:${CI_PIPELINE_ID} .
    - docker push registry.gitlab.com/${REGISTRY_USERNAME}/vodomat_server_old:${CI_PIPELINE_ID}

deploy:
  image: williamyeh/ansible:ubuntu16.04
  stage: deploy
  script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - "[[ -f /.dockerenv ]] && echo -e 'Host *\n\tStrictHostKeyChecking no\n\n' > ~/.ssh/config"
    - cd .ci
    - "ansible-playbook -i inventory -e vodomat_server_version=${CI_PIPELINE_ID}
        -e firewall_address_accept=${FIREWALL_ADDRESS_ACCEPT}
        -e registry_username=${REGISTRY_USERNAME} -e registry_password=${REGISTRY_PASSWORD}
        -e mysql_root_password=${MYSQL_ROOT_PASSWORD} -e mysql_database=${MYSQL_DATABASE}
        -e mysql_user=${MYSQL_USER} -e mysql_password=${MYSQL_PASSWORD}
        -e mysql_select_user=${MYSQL_SELECT_USER} -e mysql_select_password=${MYSQL_SELECT_PASSWORD}
        -e mysql_host=${MYSQL_HOST} -e mysql_port=${MYSQL_PORT}
        -e redis_host=${REDIS_HOST} -e redis_port=${REDIS_PORT}
        -e secret_key=${SECRET_KEY} -e container_count=4 deploy.yml"
